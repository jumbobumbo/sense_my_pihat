class TestPatternListData:
    """
    Contains expected results from the TestPatternList unittest class
    """
    class BaseListNoFile:
        """
        test data for test__create_base_list_no_file
        """
        # _CREATE_BASE_LIST_NO_FILE INPUT
        input_0 = { "base": [0, 0, 0] }
        input_1 = { "base": [100, 0, 0] }
        input_2 = { "base": [0, 100, 0] }
        input_3 = { "base": [0, 0, 100] }

        # _CREATE_BASE_LIST_NO_FILE EXPECTED RESULTS
        """
        you may question this, and thats fair.
        In essance, I wanted some values which weren't calculated on the fly at all, so i had something
        fixed to assert against. Also, anyone can read the below, and understand what I expect as a result.
        """
        res_l_0 = [
            [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], 
            [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], 
            [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], 
            [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], 
            [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], 
            [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], 
            [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], 
            [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0], [0, 0, 0]
            ]

        res_l_1 = [
            [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], 
            [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], 
            [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], 
            [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], 
            [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], 
            [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], 
            [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], 
            [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0], [100, 0, 0]
            ]
        
        res_l_2 = [
            [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], 
            [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], 
            [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], 
            [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], 
            [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], 
            [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], 
            [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], 
            [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0], [0, 100, 0]
            ]

        res_l_3 = [
            [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], 
            [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], 
            [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], 
            [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], 
            [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], 
            [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], 
            [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], 
            [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100], [0, 0, 100]
            ]

    class BaseListWithFile:
        # _CREATE_BASE_LIST_WITH_FILE EXPECTED RESULTS
        res_b_creeper = [
            [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], 
            [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], 
            [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], 
            [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], 
            [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], 
            [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], 
            [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], 
            [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0]
            ]
        
        res_b_jumble = [
            [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], 
            [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], 
            [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], 
            [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], 
            [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], 
            [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], 
            [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], 
            [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60]
            ]

    class PatternListWithWithoutFile:
        # _CREATE_PATTERN_LIST_NO_FILE INPUT
        input_creeper_dict = { 
            "base": [0, 255, 0],
            "green": {
                "160": [55],
                "150": [0, 7, 12],
                "130": [15],
                "120": [3, 42, 45],
                "100": [22, 35, 36],
                "80": [17, 18, 58, 61],
                "60": [21, 25, 30],
                "40": [26, 29, 43, 44, 50, 51, 52, 53]
            }
        }

        input_jumble_dict = { 
            "base": [100, 0, 60],
            "red": {
                "130": [16],
                "120": [3, 39, 21],
                "100": [50, 35, 7],
                "80": [38, 10, 2, 46]
            },
            "green": {
                "160": [55],
                "150": [0, 7, 12],
                "130": [15],
                "120": [3, 42, 45],
                "100": [22, 35, 36],
                "80": [17, 18, 58, 61],
                "60": [21, 25, 30],
                "40": [26, 29, 43, 44, 50, 51, 52, 53]
            }
        }

        # _CREATE_PATTERN_LIST_WITH_FILE, _CREATE_PATTERN_LIST_NO_FILE EXPECTED RESULTS
        res_creeper = [
            [0, 150, 0], [0, 255, 0], [0, 255, 0], [0, 120, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 150, 0], 
            [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 150, 0], [0, 255, 0], [0, 255, 0], [0, 130, 0], 
            [0, 255, 0], [0, 80, 0], [0, 80, 0], [0, 255, 0], [0, 255, 0], [0, 60, 0], [0, 100, 0], [0, 255, 0], 
            [0, 255, 0], [0, 60, 0], [0, 40, 0], [0, 255, 0], [0, 255, 0], [0, 40, 0], [0, 60, 0], [0, 255, 0], 
            [0, 255, 0], [0, 255, 0], [0, 255, 0], [0, 100, 0], [0, 100, 0], [0, 255, 0], [0, 255, 0], [0, 255, 0], 
            [0, 255, 0], [0, 255, 0], [0, 120, 0], [0, 40, 0], [0, 40, 0], [0, 120, 0], [0, 255, 0], [0, 255, 0], 
            [0, 255, 0], [0, 255, 0], [0, 40, 0], [0, 40, 0], [0, 40, 0], [0, 40, 0], [0, 255, 0], [0, 160, 0], 
            [0, 255, 0], [0, 255, 0], [0, 80, 0], [0, 255, 0], [0, 255, 0], [0, 80, 0], [0, 255, 0], [0, 255, 0]
            ]

        res_jumble = [
            [100, 150, 60], [100, 0, 60], [80, 0, 60], [120, 120, 60], [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 150, 60], 
            [100, 0, 60], [100, 0, 60], [80, 0, 60], [100, 0, 60], [100, 150, 60], [100, 0, 60], [100, 0, 60], [100, 130, 60], 
            [130, 0, 60], [100, 80, 60], [100, 80, 60], [100, 0, 60], [100, 0, 60], [120, 60, 60], [100, 100, 60], [100, 0, 60], 
            [100, 0, 60], [100, 60, 60], [100, 40, 60], [100, 0, 60], [100, 0, 60], [100, 40, 60], [100, 60, 60], [100, 0, 60], 
            [100, 0, 60], [100, 0, 60], [100, 0, 60], [100, 100, 60], [100, 100, 60], [100, 0, 60], [80, 0, 60], [120, 0, 60], 
            [100, 0, 60], [100, 0, 60], [100, 120, 60], [100, 40, 60], [100, 40, 60], [100, 120, 60], [80, 0, 60], [100, 0, 60], 
            [100, 0, 60], [100, 0, 60], [100, 40, 60], [100, 40, 60], [100, 40, 60], [100, 40, 60], [100, 0, 60], [100, 160, 60], 
            [100, 0, 60], [100, 0, 60], [100, 80, 60], [100, 0, 60], [100, 0, 60], [100, 80, 60], [100, 0, 60], [100, 0, 60]
            ]

class TestGeneratePatternFromListData:
    """
    holds test data for TestGeneratePatternFromList unittests
    """
    class PatternGen:
        # _PATTERN_GEN INPUT DATA
        stripe_list_input = [[54, 45, 43], [100, 200, 9], [0, 0, 150], [80, 80, 80]]
        square_list_input = [[0, 100, 10], [30, 0, 150], [120, 40, 40], [120, 120, 120]]
        # _PATTERN_GEN RETURN DATA
        stripe_list_return = [
            [54, 45, 43], [54, 45, 43], [54, 45, 43], [54, 45, 43], [54, 45, 43], [54, 45, 43], [54, 45, 43], [54, 45, 43], 
            [54, 45, 43], [54, 45, 43], [54, 45, 43], [54, 45, 43], [54, 45, 43], [54, 45, 43], [54, 45, 43], [54, 45, 43], 
            [100, 200, 9], [100, 200, 9], [100, 200, 9], [100, 200, 9], [100, 200, 9], [100, 200, 9], [100, 200, 9], [100, 200, 9], 
            [100, 200, 9], [100, 200, 9], [100, 200, 9], [100, 200, 9], [100, 200, 9], [100, 200, 9], [100, 200, 9], [100, 200, 9], 
            [0, 0, 150], [0, 0, 150], [0, 0, 150], [0, 0, 150], [0, 0, 150], [0, 0, 150], [0, 0, 150], [0, 0, 150], 
            [0, 0, 150], [0, 0, 150], [0, 0, 150], [0, 0, 150], [0, 0, 150], [0, 0, 150], [0, 0, 150], [0, 0, 150], 
            [80, 80, 80], [80, 80, 80], [80, 80, 80], [80, 80, 80], [80, 80, 80], [80, 80, 80], [80, 80, 80], [80, 80, 80], 
            [80, 80, 80], [80, 80, 80], [80, 80, 80], [80, 80, 80], [80, 80, 80], [80, 80, 80], [80, 80, 80], [80, 80, 80]
            ]
        
        square_list_return = [
            [0, 100, 10], [0, 100, 10], [0, 100, 10], [0, 100, 10], [30, 0, 150], [30, 0, 150], [30, 0, 150], [30, 0, 150], 
            [0, 100, 10], [0, 100, 10], [0, 100, 10], [0, 100, 10], [30, 0, 150], [30, 0, 150], [30, 0, 150], [30, 0, 150], 
            [0, 100, 10], [0, 100, 10], [0, 100, 10], [0, 100, 10], [30, 0, 150], [30, 0, 150], [30, 0, 150], [30, 0, 150], 
            [0, 100, 10], [0, 100, 10], [0, 100, 10], [0, 100, 10], [30, 0, 150], [30, 0, 150], [30, 0, 150], [30, 0, 150], 
            [120, 40, 40], [120, 40, 40], [120, 40, 40], [120, 40, 40], [120, 120, 120], [120, 120, 120], [120, 120, 120], [120, 120, 120], 
            [120, 40, 40], [120, 40, 40], [120, 40, 40], [120, 40, 40], [120, 120, 120], [120, 120, 120], [120, 120, 120], [120, 120, 120], 
            [120, 40, 40], [120, 40, 40], [120, 40, 40], [120, 40, 40], [120, 120, 120], [120, 120, 120], [120, 120, 120], [120, 120, 120], 
            [120, 40, 40], [120, 40, 40], [120, 40, 40], [120, 40, 40], [120, 120, 120], [120, 120, 120], [120, 120, 120], [120, 120, 120]
            ]

    class PatternGenRaiseError:
        # _PATTERN_GEN_RAISE_ERROR EXPECTED RESULTS
        triple_zero_exp_return = ['must be nested lists, not 0', 'must be nested lists, not 0', 'must be nested lists, not 0']
        mixed_type_exp_return = ['must be nested lists, not {}', 'must be nested lists, not nice', 'must be nested lists, not ()']